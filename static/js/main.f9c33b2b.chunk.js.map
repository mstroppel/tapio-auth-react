{"version":3,"sources":["authConfig.js","logo.svg","LoginButton.js","LogoutButton.js","GetAccessToken.js","App.js","index.js"],"names":["loginRequest","scopes","LoginButton","instance","useMsal","className","onClick","loginRedirect","catch","e","console","error","handleLogin","LogoutButton","logoutRedirect","handleLogout","GetAccessToken","accounts","useState","accessToken","setAccessToken","navigator","clipboard","writeText","href","target","rel","request","account","acquireTokenSilent","then","response","alert","acquireTokenRedirect","App","isAuthenticated","useIsAuthenticated","src","logo","alt","idTokenClaims","email","msalInstance","PublicClientApplication","auth","clientId","authority","redirectUri","knownAuthorities","cache","cacheLocation","storeAuthStateInCookie","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAcaA,EAAe,CACxBC,OAAQ,CAAC,SAAU,iBAAkB,iECf1B,G,MAAA,IAA0B,kC,eCmB1BC,EARK,WAAO,IACfC,EAAaC,cAAbD,SAER,OACI,wBAAQE,UAAU,SAASC,QAAS,kBAVxB,SAACH,GACjBA,EAASI,cAAcP,GAAcQ,OAAM,SAAAC,GACvCC,QAAQC,MAAMF,MAQ4BG,CAAYT,IAAtD,oBCGOU,EAVM,WAAO,IAChBV,EAAaC,cAAbD,SAER,OACI,wBAAQE,UAAU,SAASC,QAAS,kBAVvB,SAACH,GAClBA,EAASW,iBAAiBN,OAAM,SAAAC,GAC5BC,QAAQC,MAAMF,MAQ4BM,CAAaZ,IAAvD,qB,gBC4BOa,EAnCQ,WAAO,IAAD,EACMZ,cAAvBD,EADiB,EACjBA,SAAUc,EADO,EACPA,SADO,EAEaC,mBAAS,MAFtB,mBAElBC,EAFkB,KAELC,EAFK,KAqBzB,OACID,EACI,qCACI,qBAAKd,UAAU,6BAAf,SACKc,IAEL,wBAAQd,UAAU,yBAAyBC,QAAS,kBAAMe,UAAUC,UAAUC,UAAUJ,IAAxF,qCACA,mBAAGd,UAAU,yBAAyBmB,KAAM,gCAAkCL,EAAaM,OAAO,SAASC,IAAI,aAA/G,sCAGJ,wBAAQrB,UAAU,2BAA2BC,QA3B1B,WACvB,IAAMqB,EAAO,2BACN3B,GADM,IAET4B,QAASX,EAAS,KAGtBd,EAAS0B,mBAAmBF,GAASG,MAAK,SAACC,GACvCA,EAASZ,YACLC,EAAeW,EAASZ,aACxBa,MAAM,kEACXxB,OAAM,SAACC,GACNN,EAAS8B,qBAAqBN,GAASG,MAAK,SAACC,GACzCX,EAAeW,EAASZ,oBAe5B,mCCcGe,EAzCH,WAAO,IAAD,EACVC,EAAkBC,cAChBnB,EAAab,cAAba,SAER,OACE,sBAAKZ,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKgC,IAAKC,EAAMjC,UAAU,WAAWkC,IAAI,SACxCJ,EAAkB,cAAC,EAAD,IAAmB,cAAC,EAAD,OAExC,uBAAM9B,UAAU,cAAhB,WAEK8B,GACD,qCACE,yDACA,+HAAiG,uEAAjG,mKAKJ,6BACGA,GAAmB,2BAErBlB,EAAS,IACR,sBAAKZ,UAAU,cAAf,UACE,6CADF,UAEGY,EAAS,GAAGuB,qBAFf,aAEG,EAA2BC,SAI/BN,GACC,sBAAK9B,UAAU,mBAAf,UACE,4DACA,cAAC,EAAD,cCjCNqC,EAAe,IAAIC,INTC,CACtBC,KAAM,CACFC,SAAU,uCACVC,UAAW,kFACXC,YAAa,+CACbC,iBAAkB,CAAC,8BAEvBC,MAAO,CACHC,cAAe,iBACfC,wBAAwB,KMEhCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAcnD,SAAUuC,EAAxB,SACE,cAAC,EAAD,QAGJa,SAASC,eAAe,W","file":"static/js/main.f9c33b2b.chunk.js","sourcesContent":["export const msalConfig = {\n    auth: {\n        clientId: \"e35cbc3c-7055-43a2-b978-d8d24a040140\",\n        authority: \"https://login.mytapio.one/tapiousers.onmicrosoft.com/B2C_1A_TAPIO_SIGNIN_SHORT/\", // https://<your-tenant>.b2clogin.com/<your-tenant>.onmicrosoft.com/<your-policyID>\n        redirectUri: \"https://tapioone.github.io/tapio-auth-react/\", // for dev use http://localhost:3000\n        knownAuthorities: [\"https://login.mytapio.one\"]\n    },\n    cache: {\n        cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\n        storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\n    }\n}\n\n// msal request --> https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/request-response-object.md\nexport const loginRequest = {\n    scopes: [\"openid\", \"offline_access\", \"https://tapiousers.onmicrosoft.com/React-PKCE-SampleApp/Read\"] // https://docs.microsoft.com/en-us/azure/active-directory-b2c/access-tokens#openid-connect-scopes\n};","export default __webpack_public_path__ + \"static/media/logo.30091f21.svg\";","import React from 'react';\nimport { useMsal } from \"@azure/msal-react\";\n\nimport { loginRequest } from \"./authConfig\";\n\nconst handleLogin = (instance) => {\n    instance.loginRedirect(loginRequest).catch(e => {\n        console.error(e);\n    });\n}\n\nconst LoginButton = () => {\n    const { instance } = useMsal();\n\n    return (\n        <button className=\"button\" onClick={() => handleLogin(instance)}>Login</button>\n    )\n}\n\nexport default LoginButton;","import { useMsal } from \"@azure/msal-react\";\n\nconst handleLogout = (instance) => {\n    instance.logoutRedirect().catch(e => {\n        console.error(e);\n    });\n}\n\nconst LogoutButton = () => {\n    const { instance } = useMsal();\n\n    return (\n        <button className=\"button\" onClick={() => handleLogout(instance)}>\n            Logout\n        </button>\n    )\n}\n\nexport default LogoutButton;","import { useState } from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\n\nimport { loginRequest } from \"./authConfig\";\n\nconst GetAccessToken = () => {\n    const { instance, accounts } = useMsal();\n    const [accessToken, setAccessToken] = useState(null);\n\n    const RequestAccessToken = () => {\n        const request = {\n            ...loginRequest,\n            account: accounts[0] // account is needed additional to the scope\n        };\n\n        instance.acquireTokenSilent(request).then((response) => {\n            response.accessToken ?\n                setAccessToken(response.accessToken) :\n                alert(\"Could not receive an Access Token. Please check your scope.\")\n        }).catch((e) => {\n            instance.acquireTokenRedirect(request).then((response) => {\n                setAccessToken(response.accessToken);\n            });\n        });\n    }\n\n    return (\n        accessToken ?\n            <>\n                <div className=\"App-access-token-container\">\n                    {accessToken}\n                </div>\n                <button className=\"link align-self-center\" onClick={() => navigator.clipboard.writeText(accessToken)}>Copy token to clipboard</button>\n                <a className=\"link align-self-center\" href={\"https://jwt.ms/#access_token=\" + accessToken} target=\"_blank\" rel=\"noreferrer\">Check token at jwt.ms</a>\n            </>\n            :\n            <button className=\"button align-self-center\" onClick={RequestAccessToken}>Request Access Token</button>\n    );\n};\n\nexport default GetAccessToken;","import { useIsAuthenticated, useMsal } from \"@azure/msal-react\";\n\nimport logo from './logo.svg';\nimport './App.css';\n\nimport LoginButton from './LoginButton';\nimport LogoutButton from \"./LogoutButton\";\nimport GetAccessToken from \"./GetAccessToken\";\n\nconst App = () => {\n  const isAuthenticated = useIsAuthenticated();\n  const { accounts } = useMsal();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        {isAuthenticated ? <LogoutButton /> : <LoginButton />}\n      </header>\n      <main className=\"App-content\">\n        {\n          !isAuthenticated &&\n          <>\n            <h1>tapio Auth: Sample SPA </h1>\n            <p>This is a sample App for authentication against the tapio B2C for the tapio partners with the <strong>Authorization code flow with PKCE</strong>.\n              You can log in here with your tapio account. For more information regarding the development please check the github repo and\n              the tapio developer portal.</p>\n          </>\n        }\n        <h3>\n          {isAuthenticated && \"You are authenticated.\"}\n        </h3>\n        {accounts[0] &&\n          <div className=\"App-profile\">\n            <strong>email: </strong>\n            {accounts[0].idTokenClaims?.email}\n          </div>\n        }\n\n        {isAuthenticated &&\n          <div className=\"App-access-token\">\n            <h3>Aquire Access Token Silent</h3>\n            <GetAccessToken />\n          </div>\n        }\n      </main >\n    </div >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nimport { MsalProvider } from \"@azure/msal-react\";\n\nimport { msalConfig } from \"./authConfig\";\nimport './index.css';\nimport App from './App';\n\nconst msalInstance = new PublicClientApplication(msalConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <MsalProvider instance={msalInstance}>\n      <App />\n    </MsalProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}